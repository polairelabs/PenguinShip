create sequence hibernate_sequence start 1 increment 1;
create table activity_log (id int8 not null, created_at timestamp, easypost_status varchar(255), message varchar(255), message_type varchar(255), sub_message varchar(255), shipment_id int8, user_id varchar(255), primary key (id));
create table address (id int8 not null, city varchar(255) not null, country varchar(255) not null, created_at timestamp, residential boolean not null, state varchar(255) not null, street1 varchar(255) not null, street2 varchar(255), updated_at timestamp, zip varchar(255) not null, user_id varchar(255), primary key (id));
create table app_user (id varchar(255) not null, address varchar(255), city varchar(255), email varchar(255) not null, enabled boolean, first_name varchar(255), is_email_verified boolean, last_name varchar(255), locked boolean, password varchar(255) not null, phone_number varchar(255), role varchar(255) not null, state varchar(255), default_source_address_id int8, primary key (id));
create table package (id int8 not null, created_at timestamp, height numeric(19, 2), length numeric(19, 2), name varchar(255), updated_at timestamp, value numeric(19, 2), weight numeric(19, 2) not null, width numeric(19, 2), user_id varchar(255), primary key (id));
create table person (id int8 not null, company varchar(255), email varchar(255), name varchar(255), phone_number varchar(255), type varchar(255), shipment_id int8, primary key (id));
create table rate (id int8 not null, carrier varchar(255) not null, carrier_account_id varchar(255), currency varchar(255) not null, delivery_date timestamp, delivery_date_guaranteed boolean, delivery_days int4, est_delivery_days int4, easypost_rate_id varchar(255) not null, rate numeric(19, 2) not null, retail_rate numeric(19, 2), service varchar(255), service_code varchar(255), primary key (id));
create table refresh_token (id int8 not null, expiry_date timestamp not null, refresh_token varchar(255) not null, user_id varchar(255), primary key (id));
create table shipment (id int8 not null, created_at timestamp, delivery_date timestamp, easypost_shipment_id varchar(255) not null, easypost_status varchar(255), insurance_amount numeric(19, 2), is_insured boolean not null, postage_label_url varchar(255), public_tracking_url varchar(255), shipment_number int4 not null, status varchar(255) not null, stripe_charge_id varchar(255), stripe_refund_id varchar(255), tracking_code varchar(255), updated_at timestamp, package_id int8, rate_id int8, user_id varchar(255), primary key (id));
create table shipment_address (id int8 not null, city varchar(255) not null, country varchar(255) not null, residential boolean not null, state varchar(255) not null, street1 varchar(255) not null, street2 varchar(255), type varchar(255) not null, zip varchar(255) not null, shipment_id int8, primary key (id));
create table shipment_package (id int8 not null, height numeric(19, 2), length numeric(19, 2), name varchar(255), value numeric(19, 2), weight numeric(19, 2) not null, width numeric(19, 2), primary key (id));
create table shipment_status_history_log (id int8 not null, shipment_id int8, primary key (id));
create table subscription_detail (user_id varchar(255) not null, card_last_four_digits varchar(255), card_type varchar(255), current_limit int4 not null, end_date int8, last_payment_date int8, start_date int8, status varchar(255), stripe_customer_id varchar(255), stripe_payment_method_id varchar(255), stripe_subscription_id varchar(255), subscription_plan_id varchar(255), primary key (user_id));
create table subscription_plan (id varchar(255) not null, description varchar(255), max_limit int4 not null, name varchar(255), shipment_handling_fee numeric(4, 3), stripe_price_id varchar(255), primary key (id));
create table verification_token (id int8 not null, expiry_date timestamp not null, token varchar(255), token_type varchar(255), user_id varchar(255), primary key (id));
create table webhook (id int8 not null, secret varchar(255), type varchar(255), url varchar(255), webhook_id varchar(255), primary key (id));
alter table if exists person add constraint UK_shipment_id_type unique (shipment_id, type);
alter table if exists refresh_token add constraint UK_refresh_token unique (refresh_token);
alter table if exists shipment_address add constraint UK_shipment_id_type unique (shipment_id, type);
alter table if exists verification_token add constraint UK_user_id_token_type unique (user_id, token_type);
alter table if exists webhook add constraint UK_webhook_type unique (type);
alter table if exists activity_log add constraint FK_activity_log_shipment foreign key (shipment_id) references shipment;
alter table if exists activity_log add constraint FK_activity_log_app_user foreign key (user_id) references app_user;
alter table if exists address add constraint FK_address_app_user foreign key (user_id) references app_user;
alter table if exists app_user add constraint FK_app_user_default_source_address foreign key (default_source_address_id) references address;
alter table if exists package add constraint FK_package_app_user foreign key (user_id) references app_user;
alter table if exists person add constraint FK_person_shipment foreign key (shipment_id) references shipment;
alter table if exists refresh_token add constraint FK_refresh_token_app_user foreign key (user_id) references app_user;
alter table if exists shipment add constraint FK_shipment_package foreign key (package_id) references shipment_package;
alter table if exists shipment add constraint FK_shipment_rate foreign key (rate_id) references rate;
alter table if exists shipment add constraint FK_shipment_app_user foreign key (user_id) references app_user;
alter table if exists shipment_address add constraint FK_shipment_address_shipment foreign key (shipment_id) references shipment;
alter table if exists shipment_status_history_log add constraint FK_shipment_status_history_log_shipment foreign key (shipment_id) references shipment;
alter table if exists subscription_detail add constraint FK_subscription_detail_subscription_plan foreign key (subscription_plan_id) references subscription_plan;
alter table if exists subscription_detail add constraint FK_subscription_detail_app_user foreign key (user_id) references app_user;
alter table if exists verification_token add constraint FK_verification_token_app_user foreign key (user_id) references app_user;
