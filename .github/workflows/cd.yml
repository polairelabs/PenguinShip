name: Continuous Deployment. Deploy API to VPS

on:
  push:
    branches:
      - release

jobs:
  deploy-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
        with:
          # This will create a directory named `api` and copy the repo contents to it
          # so that you can easily upload it to your remote server
          path: api
          ref: release

      - name: Copy repo to remote server
        uses: appleboy/scp-action@master
        with:
          host: ${{ vars.VPS_HOST }}
          port: ${{ vars.VPS_PORT }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: api
          target: "~/navaship"

      - name: SSH and Deploy
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ vars.VPS_HOST }}
          port: ${{ vars.VPS_PORT }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd ~/navaship/api
            docker-compose -f docker-compose.prod.yml down
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            SPRING_PROFILES_ACTIVE="prod" \
            DATABASE_NAME="${{ vars.DATABASE_NAME }}" \
            DATABASE_USER="${{ secrets.DATABASE_USER }}" \
            DATABASE_PASSWORD="${{ secrets.DATABASE_PASSWORD }}" \
            API_PORT="${{ vars.API_PORT }}" \
            API_DOMAIN="${{ vars.API_DOMAIN }}" \
            WEBAPP_URL="${{ vars.WEBAPP_URL }}" \
            SENDGRID_SENDER_EMAIL="${{ vars.SENDGRID_SENDER_EMAIL }}" \
            SENDGRID_APIKEY="${{ secrets.SENDGRID_APIKEY }}" \
            SENDGRID_VERIFY_EMAIL_TEMPLATE_ID="${{ secrets.SENDGRID_VERIFY_EMAIL_TEMPLATE_ID }}" \
            SENDGRID_FORGOT_PASSWORD_EMAIL_TEMPLATE_ID="${{ secrets.SENDGRID_FORGOT_PASSWORD_EMAIL_TEMPLATE_ID }}" \
            EASYPOST_APIKEY="${{ secrets.EASYPOST_APIKEY }}" \
            EASYPOST_WEBHOOK_ENDPOINT_SECRET="${{ secrets.EASYPOST_WEBHOOK_ENDPOINT_SECRET }}" \
            EASYPOST_WEBHOOK_ENDPOINT_URL="${{ vars.EASYPOST_WEBHOOK_ENDPOINT_URL }}" \
            STRIPE_APIKEY="${{ secrets.STRIPE_APIKEY }}" \
            STRIPE_WEBHOOK_ENDPOINT_SECRET="${{ secrets.STRIPE_WEBHOOK_ENDPOINT_SECRET }}" \
            docker-compose -f docker-compose.prod.yml up -d
